  /*
  checking repeated and null ids
  */

SELECT [cst_id],
      count (*)
  FROM [Datawarehouse].[Bronze].[crm_cust_info]
  GROUP BY cst_id
  HAVING Count(*) > 1 or cst_id is null

===========================================

/*
  checking enries with spaces
  */ 

SELECT cst_firstname FROM  Bronze.crm_cust_info
WHERE cst_firstname != TRIM(cst_firstname)

===========================================
/*
  checking format of  genders
  */ 

SELECT DISTINCT cst_gndr
FROM Bronze.crm_cust_info

/*
  checking again repeated and null ids
  */

SELECT [cst_id],
      count (*)
  FROM [Datawarehouse].[Silver].[crm_cust_info]
  GROUP BY cst_id
  HAVING Count(*) > 1 or cst_id is null

===========================================

/*
  checking again enries with spaces
  */ 

SELECT cst_firstname FROM  Silver.crm_cust_info
WHERE cst_firstname != TRIM(cst_firstname)

===========================================
/*
  checking again format of  genders
  */ 

SELECT DISTINCT cst_gndr
FROM Silver.crm_cust_info

==============================================================================================
/*
loading the table on the silver schema after cleaning
  */ 

TRUNCATE TABLE Silver.crm_cust_info;

INSERT INTO Silver.crm_cust_info ([cst_id]
      ,[cst_key]
      ,[cst_firstname]
      ,[cst_lastname]
      ,[cst_marital_status]
      ,[cst_gndr]
      ,[cst_create_date])

SELECT [cst_id],
[cst_key],
TRIM(cst_firstname) AS cst_firstname,
TRIM(cst_lastname) AS cst_firstname,

CASE WHEN UPPER (TRIM(cst_marital_status)) = 'S' THEN 'Single'
     WHEN UPPER (TRIM(cst_marital_status)) = 'M' THEN 'Married'
	 ELSE 'n/a'
	 END cst_marital_status,

CASE WHEN UPPER (TRIM(cst_gndr)) = 'F' THEN 'Female'
     WHEN UPPER (TRIM(cst_gndr)) = 'M' THEN 'Male'
	 ELSE 'n/a'
	 END [cst_gndr],
[cst_create_date]
FROM (SELECT *,
ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) as flag
FROM Bronze.crm_cust_info WHERE cst_id IS NOT NULL) t WHERE flag = 1;


